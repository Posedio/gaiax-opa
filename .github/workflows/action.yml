name: Go CI

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  OUTPUT_NAME: ${{ github.event.repository.name }}

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.24.1
    env:
      GOPATH: ${{ github.workspace }}/.go
    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            .go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Download Go modules
        run: go mod download

      - name: Run go fmt
        run: go fmt $(go list ./... | grep -v /vendor/)

      - name: Run go vet
        run: go vet $(go list ./... | grep -v /vendor/)

      - name: Run tests with tag gaiax_ovc
        run: go test --tags=gaiax_ovc -race $(go list ./... | grep -v /vendor/)

  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.24.1
    needs: test
    env:
      GOPATH: ${{ github.workspace }}/.go
      OUTPUT_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download Go modules
        run: go mod download

      - name: Build binary with gaiax_ovc tag
        run: |
          mkdir -p $OUTPUT_NAME-gaiax_ovc
          go build --tags=gaiax_ovc -o $OUTPUT_NAME ./...

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: ${{ env.OUTPUT_NAME }}

#  docker-build:
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
#    container:
#      image: gcr.io/kaniko-project/executor:debug
#      options: --entrypoint ""
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Set up Docker auth for Kaniko
#        run: |
#          mkdir -p /kaniko/.docker
#          echo "{\"auths\":{\"${{ env.CI_REGISTRY }}\":{\"username\":\"${{ secrets.CI_REGISTRY_USER }}\",\"password\":\"${{ secrets.CI_REGISTRY_PASSWORD }}\"}}}" > /kaniko/.docker/config.json
#
#      - name: Run Kaniko build
#        run: |
#          /kaniko/executor \
#            --context $GITHUB_WORKSPACE \
#            --dockerfile $GITHUB_WORKSPACE/Dockerfile \
#            --build-arg ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} \
#            --destination ${{ env.CI_REGISTRY_IMAGE }}:${{ github.ref_name }} \
#            --destination ${{ env.CI_REGISTRY_IMAGE }}:${{ github.ref_slug }}
#    env:
#      CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
#      CI_REGISTRY_IMAGE: ${{ secrets.CI_REGISTRY_IMAGE }}
#      CI_PROJECT_DIR: $GITHUB_WORKSPACE
