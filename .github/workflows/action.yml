name: Go CI

on:
  push:
    branches: [ main, dockerTest ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  OUTPUT_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.24.6
    env:
      GOPATH: ${{ github.workspace }}/.go
    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            .go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Download Go modules
        run: go mod download

      - name: Run go fmt
        run: go fmt $(go list ./... | grep -v /vendor/)

      - name: Run go vet
        run: go vet $(go list ./... | grep -v /vendor/)

      - name: Run tests with tag gaiax_ovc
        run: go test --tags=gaiax_ovc -race $(go list ./... | grep -v /vendor/)

  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.24.6
    needs: test
    env:
      GOPATH: ${{ github.workspace }}/.go
      OUTPUT_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download Go modules
        run: go mod download

      - name: Build binary with gaiax_ovc tag
        run: |
          mkdir -p $OUTPUT_NAME-gaiax_ovc
          go build --tags=gaiax_ovc -buildvcs=false -o $OUTPUT_NAME ./...

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: ${{ env.OUTPUT_NAME }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}