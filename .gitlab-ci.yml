image: golang:1.24.1

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    paths:
      - .go/pkg/mod/

variables:
  OUTPUT_NAME: $CI_PROJECT_NAME
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - test
  - build
  - release
  - deploy

test:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)
    - go test --tags=gaiax_ovc -race $(go list ./... | grep -v /vendor/)

build:
  stage: build
  script:
    - mkdir -p $OUTPUT_NAME
    - go build -o $OUTPUT_NAME ./...

    - mkdir -p $OUTPUT_NAME-gaiax_ovc
    - go build --tags=gaiax_ovc -o $OUTPUT_NAME-gaiax_ovc ./...
  artifacts:
    paths:
      - $OUTPUT_NAME
      - $OUTPUT_NAME-gaiax_ovc
  needs:
    - test

docker-build:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - main
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --build-arg ACCESS_TOKEN=$ACCESS_TOKEN --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --destination $CI_REGISTRY_IMAGE:R$CI_PIPELINE_IID

  